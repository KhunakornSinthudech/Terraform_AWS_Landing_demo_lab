name: oak_demo_lz_aws
# only show plan not apply
on:
  pull_request:
    paths:
      - 'envs/**'
      - 'modules/**'
      - '.github/workflows/oak_demo_lz_aws_ci.yml'
      
permissions:
  id-token: write   # OIDC
  contents: read
  pull-requests: write



jobs:
  plan:
    runs-on: ubuntu-latest
    env: # move it to under jobs
      AWS_REGION: ${{ vars.AWS_REGION }}
      TF_INPUT: false
      TF_IN_AUTOMATION: true
  
    defaults:
      run:
        working-directory: envs/dev  

    steps:
      - uses: actions/checkout@v4

      - name: Cache Terraform plugins
        uses: actions/cache@v4
        with:
          path: ${{ runner.temp }}/tf-plugin-cache
          key: tf-${{ runner.os }}-${{ hashFiles('**/.terraform.lock.hcl') }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.5

      - name: Configure AWS (OIDC AssumeRole)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ vars.AWS_ACCOUNT_ID }}:role/${{ vars.AWS_ROLE_NAME }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform init (S3+DDB backend)
        run: |
          terraform init \
            -backend-config="bucket=${{ vars.TF_STATE_BUCKET }}" \
            -backend-config="dynamodb_table=${{ vars.TF_LOCK_TABLE }}" \
            -backend-config="region=${{ env.AWS_REGION }}" \
            -backend-config="key=${{ vars.TF_STATE_KEY_PREFIX }}/terraform.tfstate" \
            -reconfigure

      - name: Terraform fmt (check)
        run: terraform fmt -check -diff

      - name: Terraform validate
        run: terraform validate

      - name: Terraform plan
        run: terraform plan -no-color -out=tfplan.out

      - name: Show plan
        run: terraform show -no-color tfplan.out > plan.txt

      - name: Upload plan
        uses: actions/upload-artifact@v4
        with:
          name: tfplan-dev
          path: envs/dev/plan.txt
