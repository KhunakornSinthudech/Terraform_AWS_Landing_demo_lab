name: terraform-apply-dev

on:
  push:
    branches: [ "main" ]
    paths:
      - 'envs/dev/**'
      - 'modules/**'
  workflow_dispatch: {}

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: ${{ vars.AWS_REGION }}
  TF_INPUT: false
  TF_IN_AUTOMATION: true

jobs:
  apply:
    runs-on: ubuntu-latest
    concurrency:
      group: tf-apply-dev
      cancel-in-progress: false
    defaults:
      run:
        working-directory: envs/dev

    steps:
      - uses: actions/checkout@v4

      - name: Cache Terraform plugins
        uses: actions/cache@v4
        with:
          path: ${{ runner.temp }}/tf-plugin-cache
          key: tf-${{ runner.os }}-${{ hashFiles('**/.terraform.lock.hcl') }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.5

      - name: Configure AWS (OIDC AssumeRole)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ vars.AWS_ACCOUNT_ID }}:role/${{ vars.AWS_ROLE_NAME }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform init
        run: |
          terraform init \
            -backend-config="bucket=${{ vars.TF_STATE_BUCKET }}" \
            -backend-config="dynamodb_table=${{ vars.TF_LOCK_TABLE }}" \
            -backend-config="region=${{ env.AWS_REGION }}" \
            -backend-config="key=${{ vars.TF_STATE_KEY_PREFIX }}/terraform.tfstate" \
            -reconfigure

      - name: Terraform plan
        run: terraform plan -no-color

      - name: Terraform apply
        run: terraform apply -auto-approve -no-color
